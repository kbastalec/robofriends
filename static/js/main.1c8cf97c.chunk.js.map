{"version":3,"sources":["index.js","reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js"],"names":["ReactDOM","render","document","getElementById","reportWebVitals","module","hot","accept","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":"2GAAA,iFAQAA,IAASC,OAAO,cAAC,IAAD,IAAQC,SAASC,eAAe,SAKhDC,cAEAC,EAAOC,IAAIC,U,8FCHIH,IAZS,SAAAI,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,6ECoBCQ,EAxBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,cCUTC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKC,UAAU,KAAf,SACI,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAYJ,OCETK,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,qBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCmBJC,E,kDArBP,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACbC,UAAW,GAHI,E,qDAQvB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAjBCQ,aCMrBC,G,wDACF,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACnB,YAAauB,EAAMC,OAAOC,SAdzC,EAAKX,MAAQ,CACjBjB,OAAQ,GACRG,YAAa,IAJA,E,qDAQb,WAAqB,IAAD,OAChB0B,MAAM,8CACLpC,MAAK,SAAAqC,GAAQ,OAAIA,EAASC,UAC1BtC,MAAK,SAAAuC,GAAU,EAAKV,SAAS,CAACtB,OAAQgC,S,oBAQ3C,WACI,MAA8BX,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQG,EAAf,EAAeA,YACT8B,EAAiBjC,EAAOkC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASnC,EAAYkC,kBAEzD,OAAQrC,EAAOuC,OAGH,sBAAKlC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAASiC,WAPvC,6C,GA1BMV,cA0CHC,Q","file":"static/js/main.1c8cf97c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nmodule.hot.accept(); \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    if (true) {\r\n        throw new Error('NOOOOOOOO');\r\n    }\r\n    \r\n    return(\r\n    <div>\r\n        {\r\n            robots.map((user, i) => {\r\n            return (  \r\n                <Card \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email}\r\n                    />\r\n            );\r\n        })\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='p2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1Ã¥x solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Scroll;","import React, { Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n    robots: [],\r\n    searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({robots: users})});\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n        }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading</h1> :\r\n                (\r\n                    <div className='tc'>\r\n                        <h1 className='f1'>Robofriends</h1>\r\n                        <SearchBox searchChange={this.onSearchChange} />\r\n                        <Scroll>\r\n                            <ErrorBoundry>\r\n                                <CardList robots ={filteredRobots}/>\r\n                            </ErrorBoundry>\r\n                        </Scroll>\r\n                    </div>\r\n                );\r\n        }\r\n    }\r\n\r\n\r\nexport default App;"],"sourceRoot":""}